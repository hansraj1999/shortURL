services:
  otel-collector:
      image: otel/opentelemetry-collector:latest
      container_name: otel-collector
      volumes:
        - ./otel-collector-config.yaml:/otel-local-config.yaml
      command: ["--config", "/otel-local-config.yaml"]
      ports:
        - "9091:9091"
        - "4317:4317"  # gRPC receiver port
      networks:
        - bithash
  app:
    build:
      context: ../.
      dockerfile: Dockerfile
    networks:
      - bithash
    volumes:
      - ../.:/bithash/short_url
    environment:
      - MODE=server
    env_file:
      - ".env"
    tty: true
    ports:
      - "8000"
    depends_on:
      - otel-collector
    healthcheck:
      test: ["CMD", "curl", "-f", "http://app:8000/healthz"]
      interval: 30s  # How often to run the check
      retries: 3      # Number of retries before marking the container as unhealthy
      start_period: 10s  # Grace period for containers to initialize
      timeout: 3s     # How long to wait for the health check to complete

  mongo:
    image: mongo:7.0-rc
    container_name: bithash_mongo
    hostname: bithash_mongo
    ports:
      - "27017:27017"
    networks:
      - bithash
    volumes:
#      - $mongoSharedVolume:/data/db # use this if using via sh file
      - ./database/mongo/data/db:/data/db # for windows

  redis:
    image: redis:7.2.3-alpine3.18
    container_name: bithash_redis
    hostname: bithash_redis
    ports:
      - "6379:6379"
    networks:
      - bithash
    volumes:
#     - "$redisSharedVolume:/data" # use this if using via sh file
      - ./database/redis/data:/data  # for windows
    
  nginx:
    image: nginx:stable-perl
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    ports:
      - "80:80"
    networks:
      - bithash

  
  prometheus:
    image: prom/prometheus:main
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./targets:/etc/prometheus/targets
    ports:
      - "9090:9090"
    networks:
      - bithash
    depends_on:
      - otel-collector

  grafana:
    image: grafana/grafana:main
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - bithash
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin # change this and fetch from env var.
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
    depends_on:
      - prometheus
networks:
  bithash:
    external:
      name: bithash
